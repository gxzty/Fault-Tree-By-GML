<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sEvent</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// node
rank = 1;  // 层级
data = '';  // 存储数据
logic = NULL;  // 存储该节点和其子节点的关系
parent = NULL;  // 父节点
firstChild = NULL;  //  第一个子节点
preSibling = NULL;  // 前一个兄弟节点
nextSibling = NULL;  // 后一个兄弟节点
bigSibling = 0;  // 在其之前的兄弟节点数量
smallSibling = 0;  // 在其之后的兄弟节点数量
sibling = 0;  // 总兄弟数量（包含自身）
left = 0;  // 作图左边界
right = 0;  // 作图右边界
perLenth = 0;  // 作图宽度
xp = 0;
yp = 0;
exTimes = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// image
image_speed = 0;
image_index = 0;
unit = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set Postion
if (global.page == 2) visible = false;
else if (global.page == 1) visible = true;
var smallOne = min(perHigh,perLenth);
if (smallOne &lt; 80) {
   image_xscale = smallOne/80;
} else {
    image_xscale = 1;
}
image_yscale = image_xscale;

if (parent) {
    image_xscale = min(image_xscale, parent.image_xscale);
    image_yscale = image_xscale;
}
y = rank*perHigh-.5*perHigh;

if (data == root.data) {
    left = 0;
    right = room_width;
    perLenth = right;
    x = (left + right)/2;
} else {
    bigSibling = scr_getBigSibling(id);
    smallSibling = scr_getSmallSibling(id);
    sibling = bigSibling+smallSibling+1;
    perLenth = (parent.right-parent.left)/sibling;
    left = parent.left + perLenth * bigSibling;
    right = left + perLenth;
    if (parent.preSibling &amp;&amp; !parent.preSibling.firstChild &amp;&amp; sibling != 1) {
        left = parent.preSibling.left;
        right = left + (parent.right - parent.preSibling.left) / sibling * (bigSibling + 1);
        if (preSibling) {
            left = preSibling.right;
        }
    }
    if (parent.nextSibling &amp;&amp; !parent.nextSibling.firstChild &amp;&amp; sibling != 1) {
        right = parent.nextSibling.right;
        left = right - (parent.nextSibling.right - parent.left) / sibling * (smallSibling + 1);
        if (nextSibling) {
            right = nextSibling.left;
        }
    }

    x = min(max(0,(left + right)/2),room_width-41);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.page == 2) exit; 
if (firstChild==NULL) {
    image_index = 1;
}

draw_self();
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_text(x,y,data);
switch(logic) {
    case 0:
    break;
    case OR:
        draw_sprite_ext( sLogic, OR, x, y+perHigh/3, firstChild.image_yscale, firstChild.image_yscale, 0, c_white , 1 );
        draw_sprite_ext( sLine, 0, x, y+22*image_yscale, 1, perHigh/3-22*image_yscale - 16*firstChild.image_yscale, 0, c_white , 1 );
        draw_sprite_ext( sLine, 0, x,  y+perHigh/3+4*firstChild.image_yscale, 1, perHigh/3-4*firstChild.image_yscale, 0, c_white , 1 );
        var this = firstChild;
        while (this.nextSibling) {
            this = this.nextSibling;
        }
        draw_sprite_ext( sLine, 0, firstChild.x,  y+perHigh*2/3, this.x - firstChild.x, 1, 0, c_white , 1 );

    break;
    case AND:
        draw_sprite_ext( sLogic, AND, x, y+perHigh/3, firstChild.image_yscale, firstChild.image_yscale, 0, c_white , 1 );
        draw_sprite_ext( sLine, 0, x,  y+22*image_yscale, 1, perHigh/3-22*image_yscale - 16*firstChild.image_yscale, 0, c_white , 1 );
        draw_sprite_ext( sLine, 0, x,  y+perHigh/3+16*firstChild.image_yscale, 1, perHigh/3-16*firstChild.image_yscale, 0, c_white , 1 );
        var this = firstChild;
        while (this.nextSibling) {
            this = this.nextSibling;
        }
        draw_sprite_ext( sLine, 0, firstChild.x,  y+perHigh*2/3, this.x - firstChild.x, 1, 0, c_white , 1 );
    break;
}

if (image_index == 1 &amp;&amp; sibling == 1) {
    draw_sprite_ext( sLine, 0, x, parent.y + 22* parent.image_yscale , 1, perHigh - 28*image_yscale  - 22 * parent.image_yscale, 0, c_white , 1 );
}
if (image_index == 1 &amp;&amp; sibling != 1) {
    draw_sprite_ext( sLine, 0, x, y - perHigh/3 , 1, perHigh/3 - 28 * image_yscale, 0, c_white , 1 );
}
if (image_index == 0 &amp;&amp; parent) {
    draw_sprite_ext( sLine, 0, x,  y - perHigh/3, 1, perHigh/3 - 24*image_yscale, 0, c_white , 1 );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
